plugins {
	id 'fabric-loom' version '0.12.54'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "-" + project.minecraft_version
group = project.maven_group

repositories {
	maven {
		url "https://maven.terraformersmc.com/releases"
	}
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven {
		url "https://jitpack.io"
	}
}

configurations {
    runtime {
        extendsFrom implementation
    }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.terraformersmc:modmenu:4.0.6"
	
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"

    
	modImplementation "io.github.blackspherefollower:buttplug4j:3.0.67"
	include "io.github.blackspherefollower:buttplug4j:3.0.67"

	// All transitive dependencies of the buttplug4j. This is not pretty but I didn't find any
	// other way to add transitive dependencies to the mod JAR
	include 'jakarta.websocket:jakarta.websocket-api:2.1.0'
    include 'org.eclipse.jetty.websocket:websocket-javax-client:10.0.14'
    include 'com.fasterxml.jackson.core:jackson-annotations:2.14.2'
    include 'com.fasterxml.jackson.core:jackson-databind:2.14.2'	
	include 'org.eclipse.jetty:jetty-client:10.0.14'
	include 'org.eclipse.jetty.toolchain:jetty-javax-websocket-api:1.1.2'
	include 'org.eclipse.jetty.websocket:websocket-javax-common:10.0.14'
	include 'org.eclipse.jetty.websocket:websocket-core-client:10.0.14'
	include 'org.eclipse.jetty.websocket:websocket-core-common:10.0.14'
	include 'org.eclipse.jetty:jetty-xml:10.0.14'
	include 'org.eclipse.jetty:jetty-http:10.0.14'
	include 'org.eclipse.jetty:jetty-io:10.0.14'
	include 'org.eclipse.jetty:jetty-jmx:10.0.14'
	include 'org.eclipse.jetty:jetty-alpn-client:10.0.14'
	include 'org.eclipse.jetty:jetty-util:10.0.14'
	
	include "com.fasterxml.jackson.core:jackson-databind:2.12.1"
	include "com.fasterxml.jackson.core:jackson-annotations:2.12.1"
	include "com.fasterxml.jackson.core:jackson-core:2.12.1"
}

jar {
	from "LICENSE"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	it.options.release = 17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier = "sources"
	from sourceSets.main.allSource
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}			
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
